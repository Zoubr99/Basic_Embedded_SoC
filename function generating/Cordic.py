import math

def cordic_sine(theta, iterations=10):
    K = 0.6072529350088813  # K = 0.60725 is a commonly used constant for 10 iterations
    
    angle = theta
    x = 1.0
    y = 0.0
    for i in range(iterations):
        if angle < 0:
            x_new = x + (y * K)
            y_new = y - (x * K)
            angle += math.atan(2**(-i))
        else:
            x_new = x - (y * K)
            y_new = y + (x * K)
            angle -= math.atan(2**(-i))
        x, y = x_new, y_new
    
    return y

# Example usage:
import matplotlib.pyplot as plt

# Generate sine wave points from 0 to 2*pi
theta_values = [i * 2 * math.pi / 100 for i in range(100)]
sine_values = [cordic_sine(theta) for theta in theta_values]

plt.plot(theta_values, sine_values)
plt.xlabel('Theta (radians)')
plt.ylabel('Sine(theta)')
plt.title('Sine Wave Generated by CORDIC Algorithm')
plt.grid(True)
plt.show()
